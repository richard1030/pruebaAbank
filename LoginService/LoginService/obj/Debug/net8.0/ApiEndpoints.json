[
  {
    "ContainingType": "LoginService.Controllers.LoginController",
    "Method": "CreateCliente",
    "RelativePath": "api/Login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "clienteParam",
        "Type": "LoginService.Dto.ClienteForLoginDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "LoginService.Controllers.ClientesController",
    "Method": "CreateCliente",
    "RelativePath": "api/v1/users/CreateUser",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "cliente",
        "Type": "LoginService.Dto.ClienteForCreationDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "LoginService.Controllers.ClientesController",
    "Method": "DeleteCompany",
    "RelativePath": "api/v1/users/DeleteUser/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "LoginService.Controllers.ClientesController",
    "Method": "GetCliente",
    "RelativePath": "api/v1/users/GetUser/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [],
    "EndpointName": "ClienteById"
  },
  {
    "ContainingType": "LoginService.Controllers.ClientesController",
    "Method": "UpdateCliente",
    "RelativePath": "api/v1/users/UpdateUser/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "cliente",
        "Type": "LoginService.Dto.ClienteForUpdateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "LoginService.Controllers.ClientesController",
    "Method": "GetClientes",
    "RelativePath": "api/v1/users/Users",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "LoginService.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[LoginService.WeatherForecast, LoginService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]